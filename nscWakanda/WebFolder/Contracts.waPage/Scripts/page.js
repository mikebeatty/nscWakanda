//Welsh Harris (14:21):/** * @fileOverview Code to init everything for the main app page * @author Welsh Harris * @created 11/24/2014 *//** @namespace */var Wap = Wap || {};WAF.onAfterInit = function() {    "use strict";    Wap.page = (function() {        //module API        //=================================================================================================        var viewComp = $$("component1");        //setup views//        views = [//            {name: "auth", description: "@Show Portal", path: "/portal.waPage/views/auth.waComponent"},//        ];        /**         * load a view into the main view component         * @param {string} viewName - name of the view as setup in the viewsArr         * @param {object} [userData] - data to send to the component when it loads into the view         */        function goToView(viewName, userData) {                    }        /**         * Handle logging out         */        function onAfterLogout() {            goToView("auth");        }        //on load        //=================================================================================================        function onLoad() {                      //clicking tabs loads the appropriate view//            WAF.addListener(messagesTab, "click", function() {//                goToView("messages");//            });                    var vcompanyID = '73712';//		sources.web_Access.query('WebLogOn == :1',Wap.auth.getCurrUserName());//		sources.rMA_OnSite.query('SSP_ID == :1',sources.web_Access.CompanyID);//		sources.rMA_OnSite.query('SSP_ID == :1',vSSPID);		sources.contracts.wak_getContractArr(vcompanyID,{				//consider using WakAPI as standard table		onSuccess: function(event) {		contractArr = JSON.parse(event.result);		sources.contractArr.sync();	}			});                }                        //public API        //=================================================================================================        return {            goToView: goToView,            onLoad: onLoad        };    }());    Wap.page.onLoad();};